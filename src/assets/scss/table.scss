.table-container {
    overflow-x:auto;
}
.table-container caption {
    padding: 1em;
}
.table-container table {
        width: 100%;
    }
.table-container th a{
    color: var(--colorprincipal);
    text-decoration: underline;
}
.table-container table,
.table-container th,
.table-container td {
        border: 1px solid var(--colorprincipal);
        border-collapse: collapse;
        padding: 5px;
        color: var(--colorprincipal);
    }
.table-container th {
        border: 1px solid transparent;
        border-bottom-color: var(--colorprincipal);
}
.table-container td:nth-child(odd) {
        background-color: var(--colorprincipal);
        color: var(--colorsecundario);
}


/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	@media
	  only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px)  {

		/* Force table to not be like tables anymore */
		.table-container table, .table-container thead, .table-container tbody, .table-container th, .table-container td, .table-container tr, .table-container caption {
			display: block;
		}

		/* Hide table headers (but not display: none;, for accessibility) */
		.table-container thead tr {
			position: absolute;
			top: -9999px;
			left: -9999px;
		}

    .table-container tr{
      margin: 0 0 1rem 0;
    }
      
    .table-container tr:nth-child(odd) {
      background: var(--colorsecundario);
    }
    
    .table-container td {
			/* Behave  like a "row" */
			border: none;
			border-bottom: 1px solid var(--colorsecundario);
			position: relative;
			padding-left: 50%;
		}

		.table-container td:before {
			/* Now like a table header */
			position: absolute;
			/* Top/left values mimic padding */
			top: 0;
			left: 6px;
			width: 45%;
			padding-right: 10px;
			white-space: nowrap;
		}

		/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
		.table-container td:nth-of-type(1):before { content: "ðŸŒ³"; }
		.table-container td:nth-of-type(2):before { content: "GÃ©nero y especie"; }
		.table-container td:nth-of-type(3):before { content: "Nombre comÃºn"; }
		.table-container td:nth-of-type(4):before { content: "Referencia"; }
		.table-container td:nth-of-type(5):before { content: "Ayuntamiento"; }
		.table-container td:nth-of-type(6):before { content: "InformaciÃ³n"; }
		.table-container td:nth-of-type(7):before { content: "col 7"; }
		.table-container td:nth-of-type(8):before { content: "col 8"; }
		.table-container td:nth-of-type(9):before { content: "col 9"; }
		.table-container td:nth-of-type(10):before { content: "col 10"; }
	}